#lang ivy1.7

# id_t is the type of node ids
# self_id is the node of each node instance
# val_t is the type of values

isolate node = {

    relation voted(SELF:id_t, VAL:val_t)
    relation accepted(SELF:id_t, VAL:val_t)
    relation heard_vote(SELF:id_t, SRC:id_t, VAL:val_t)
    relation heard_accept(SELF:id_t, SRC:id_t, VAL:val_t)

    action vote(self_id:id_t, v:val_t) =
    {
        voted(self_id, v) := true;
        call network.broadcast(self_id, msg_vote, v)
    }

    action accept(self_id:id_t, v:val_t) =
    {
         accepted(self_id, v) := true;
         call network.broadcast(self_id, msg_accept, v)
    }

     action recv_vote(self_id:id_t, src:id_t, val:val_t) =
     {
         heard_vote(self_id, src, val) := true
     }

    action recv_accept(self_id:id_t, src:id_t, val:val_t) =
    {
        heard_accept(self_id, src, val) := true
    }

    # called from the network / manually.
    action recv(self_id:id_t, m:msg_t) =
    {
        if src(m) ~= self_id
        {
            if kind(m) = msg_vote
            {
                call recv_vote(self_id, src(m), val(m))
            }
        }
    }

} with network, id_t

